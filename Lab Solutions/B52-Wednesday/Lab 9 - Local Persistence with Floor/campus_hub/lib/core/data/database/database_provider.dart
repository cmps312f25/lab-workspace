// TODO: Phase 5.1 - Create Database Provider
//
// A Riverpod provider that builds and provides the AppDatabase instance.
// This makes the database available throughout your app.
//
// INSTRUCTIONS:
// 1. Import Riverpod: import 'package:flutter_riverpod/flutter_riverpod.dart';
// 2. Import AppDatabase: import 'app_database.dart';
//
// 3. Create a FutureProvider<AppDatabase>:
//    - Use FutureProvider because database creation is asynchronous
//    - The generated builder class has a $ prefix: $FloorAppDatabase
//    - Use .databaseBuilder('campus_hub.db') to specify the database filename
//    - Use .build() to create the database
//
// Example structure:
// final databaseProvider = FutureProvider<AppDatabase>((ref) async {
//   return await $FloorAppDatabase
//       .databaseBuilder('your_database_name.db')
//       .build();
// });
//
// IMPORTANT NOTES:
// - $FloorAppDatabase is generated by Floor (note the $ prefix!)
// - The database file will be stored in the app's document directory
// - First time the app runs, Floor creates the database with all tables
// - Foreign key constraints are automatically enforced
// - The database persists across app restarts
//
// Hint: Check Lab 9 document Phase 5.1 for complete example!

// TODO: Add imports here (flutter_riverpod, app_database)

// TODO: Create databaseProvider as a FutureProvider<AppDatabase>
// Use $FloorAppDatabase.databaseBuilder('campus_hub.db').build()
